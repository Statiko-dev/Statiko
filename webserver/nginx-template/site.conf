# TLS-enabled website
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Listen on the domain
    server_name {{.Item.Domain}};

    # Configure logging
    access_log off;
    error_log {{.AppRoot}}sites/{{.Item.Domain}}/nginx-error.log error;

    # TLS
    ssl_certificate {{.AppRoot}}sites/{{.Item.Domain}}/tls/certificate.pem;
    ssl_certificate_key {{.AppRoot}}sites/{{.Item.Domain}}/tls/key.pem;
    ssl_dhparam {{.TLS.Dhparams}};

    # Webroot
    root {{.AppRoot}}sites/{{.Item.Domain}}/www;
    index index.html index.htm;

{{if .Item.ClientCaching}}
    # Client-side caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|svgz|webp|woff|woff2|tif|tiff|eps|pdf)$ {
       expires 10d;
       add_header Pragma public;
       add_header Cache-Control "public";
    }
    location ~* \.(css|js)$ {
       expires 2d;
       add_header Pragma public;
       add_header Cache-Control "public";
    }
{{end}}

    # 404 errors
    location / {
        try_files $uri $uri/ =404;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;

    # Listen on the domain and on the aliases if any
    server_name {{.Item.Domain}} {{if .Item.Aliases}}{{joinList .Item.Aliases " "}}{{end}};

    # Configure logging
    access_log off;
    error_log {{.AppRoot}}sites/{{.Item.Domain}}/nginx-error.log error;

    # Redirect to the HTTPS website
    return 301 https://{{.Item.Domain}}$request_uri;
}

{{if .Item.Aliases}}
# Redirect aliases (on HTTPS) to the canonical host
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # Listen on the wrong hosts
    server_name {{joinList .Item.Aliases " "}};

    # Configure logging
    access_log off;
    error_log {{.AppRoot}}sites/{{.Item.Domain}}/nginx-error.log error;

    # TLS
    ssl_certificate {{.AppRoot}}sites/{{.Item.Domain}}/tls/certificate.pem;
    ssl_certificate_key {{.AppRoot}}sites/{{.Item.Domain}}/tls/key.pem;
    ssl_dhparam {{.TLS.Dhparams}};

    # Redirect to the canonical host
    return 301 https://{{.Item.Domain}}$request_uri;
}
{{end}}
