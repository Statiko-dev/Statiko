# TLS-enabled website
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Listen on the domain
    server_name site2.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site2.local/nginx-error.log error;

    # TLS
    ssl_certificate /data/sites/site2.local/tls/certificate.pem;
    ssl_certificate_key /data/sites/site2.local/tls/key.pem;
    ssl_dhparam /etc/smplatform/dhparams.pem;

    # Webroot
    root /data/sites/site2.local/www;
    index index.html index.htm;



    # 404 errors
    location / {
        try_files $uri $uri/ =404;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;

    # Listen on the domain and on the aliases if any
    server_name site2.local site2-alias.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site2.local/nginx-error.log error;

    # Redirect to the HTTPS website
    return 301 https://site2.local$request_uri;
}


# Redirect aliases (on HTTPS) to the canonical host
server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # Listen on the wrong hosts
    server_name site2-alias.local;

    # Configure logging
    access_log off;
    error_log /data/sites/site2.local/nginx-error.log error;

    # TLS
    ssl_certificate /data/sites/site2.local/tls/certificate.pem;
    ssl_certificate_key /data/sites/site2.local/tls/key.pem;
    ssl_dhparam /etc/smplatform/dhparams.pem;

    # Redirect to the canonical host
    return 301 https://site2.local$request_uri;
}
